/* Background Styling */
.background {
  background-image: url("/images/background.jpg");
  height: auto; /* Allow the background to cover the content */
  min-height: 100vh; /* Ensure it covers at least the viewport height */
  width: 100%;
  background-size: cover; /* Ensures it covers the entire page */
  background-position: center;
  background-repeat: no-repeat; /* No repeat by default */
  background-attachment: fixed; /* Parallax effect when scrolling */
  display: flex;
  justify-content: center;
  align-items: center;
  color: white;
  font-family: "Nunito", sans-serif;
}

/* Mood button styling */
.moodBtn {
  backdrop-filter: blur(10px);
  border: 1px solid #ffea00 !important;
  background: rgba(0, 0, 0, 0.4);
  color: white;
  transition: transform 0.3s ease, background-color 0.3s ease;
  cursor: pointer;
  padding-left: 2rem; /* Convert to rem */
  padding-right: 2rem; /* Convert to rem */
  padding-top: 1rem; /* Adjust padding to ensure it scales properly */
  padding-bottom: 1rem; /* Adjust padding to ensure it scales properly */
  text-align: center;
  border-radius: 12px;
  font-size: 1.2rem; /* Use rem for text size */
  width: auto;
  max-width: 90%; /* Allow buttons to scale depending on screen width */
  margin: 0.5rem; /* Give some space around buttons */
}

.moodBtn:hover {
  transform: scale(1.2);
  background-color: red;
  border: 2px solid #dc143c;
  box-shadow: 0 0 15px #dc143c;
  cursor: pointer;
  backdrop-filter: blur(10px);
}

/* Text Styling */
.text {
  font-size: 2.5rem;
}

.ptext {
  margin-top: 1rem;
  font-size: 1.2rem; /* Using rem for consistency */
  font-family: "Nunito", sans-serif;
}

/* Grid Container Styling for Responsive Layout */
.gridContainer {
  display: grid;
  grid-column-gap: 2rem; /* Use rem for consistent spacing */
  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
  padding: 1rem; /* Use rem for consistent padding */
}
@media (max-width: 1000px) {
  .gridContainer {
    display: grid;
    grid-template-columns: repeat(3, 1fr); /* 3 items per row */
    grid-column-gap: 5px; /* Space between grid items */
    padding: 0.75rem; /* Slight padding for the grid */
    width: calc(
      100% - 20px
    ); /* Ensure the grid does not overflow horizontally */
    margin: 0 auto; /* Center the grid container */
    box-sizing: border-box; /* Include padding in width calculation */
    justify-items: center; /* Center items in their grid cells */
    align-self: center;
    justify-self: center;
  }

  /* Hide the last item in the grid when the screen size is 1000px or smaller */
  .gridContainer > *:last-child {
    display: none; /* Hide the last grid item */
  }

  .moodBtn {
    padding: 0.1rem; /* Adjust padding for smaller screens */
    font-size: 0.9rem; /* Smaller font size for the button text */
    width: 100%; /* Ensure buttons fill their grid cell */
    height: 100px; /* Fixed height for the button */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    border-radius: 12px;
    backdrop-filter: blur(10px); /* Optional: styling for button */
    border: 1px solid #ffea00; /* Optional: button border */
    background: rgba(0, 0, 0, 0.4); /* Button background */
  }

  .text {
    font-size: 1.5rem; /* Adjust emoji size */
  }

  .ptext {
    font-size: 1rem; /* Smaller text size */
  }
}

@media (min-width: 1024px) {
  .gridContainer {
    grid-template-columns: repeat(4, 1fr);
    grid-column-gap: 3rem; /* Increase spacing for larger screens */
    grid-row-gap: 2rem;
    padding: 3rem; /* Larger padding for bigger screens */
  }

  .moodBtn {
    padding-left: 3rem; /* Increase button padding for larger screens */
    padding-right: 3rem; /* Increase button padding for larger screens */
  }
}

/* Heading Styling */
.heading1 {
  margin-top: 5vh; /* Use vh to make it responsive to screen height */
  text-align: center;
  font-size: 2rem; /* Use rem for text size */
  font-weight: bold;
  margin-bottom: 2rem; /* Add space between heading and grid */
  color: white;
}

/* Add footer image when content overflows */
.pageContainer:after {
  content: "";
  display: block;
  background-image: url("/images/footer-image.jpg");
  background-size: cover;
  height: 300px;
  width: 100%;
  position: absolute;
  bottom: 0;
  left: 0;
}
/* Add this to your grid.module.css */
.spinner {
  border: 6px solid #f3f3f3; /* Light background */
  border-top: 6px solid #3498db; /* Blue spinner */
  border-radius: 50%;
  width: 60px;
  height: 60px;
  position: fixed; /* Ensure spinner stays fixed in the center */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); /* Center the spinner */
  z-index: 9999; /* Ensure it is above other elements */
  animation: spin 1.5s linear infinite; /* Apply spin animation */
}

/* Spinning effect */
@keyframes spin {
  0% {
    transform: translate(-50%, -50%) rotate(0deg); /* Rotate the spinner */
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg); /* Complete a full 360Â° rotation */
  }
}

/* Spinner Container */
.spinnerContainer {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.9); /* Full-screen black background */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999; /* Ensure it's above all other content */
  text-align: center; /* Center text under the spinner */
}

/* Spinner Text Styling */
.spinnerText {
  font-size: 1.5rem; /* Smaller font size */
  color: #f5f5f5; /* Light color for visibility */
  margin-top: 190px; /* Space between spinner and text */
  font-weight: 500; /* Slightly bold */
  background-color: black;
  font-weight: bold;
  width: 100%;
  height: 100%;
  padding: 10px;
}

/* Optional: Add glow effect to the spinner for a more dynamic look */
.spinner::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 80px;
  height: 80px;
  background: rgba(52, 152, 219, 0.2); /* Blue glow */
  border-radius: 50%;
  transform: translate(-50%, -50%);
  animation: pulseGlow 1.5s ease-in-out infinite;
}

/* Glow pulse effect */
@keyframes pulseGlow {
  0%,
  100% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0.3;
  }
  50% {
    transform: translate(-50%, -50%) scale(1.2);
    opacity: 1;
  }
}
